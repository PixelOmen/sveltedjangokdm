volumes:
  postgres_kdm_prod_volume:
    external: true

services:
  postgres_db:
    container_name: "${PROJECT_NAME}_prod_postgres_db"
    image: postgres:15.2-alpine
    restart: always
    volumes:
      - postgres_kdm_prod_volume:/var/lib/postgresql/data:delegated
    ports:
      - ${DB_HOST_PORT}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  web:
    build: ./backend
    command: >
      sh -c "
      python3 manage.py migrate &&
      gunicorn ${PROJECT_NAME}.wsgi:application --bind 0.0.0.0:8000"
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - DJANGO_SETTINGS_MODULE=${PROJECT_NAME}.settings
      - KDM_CLI_BIN=${KDM_CLI_BIN}
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=${DB_HOST}
      - DB_HOST_PORT=${DB_HOST_PORT}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web